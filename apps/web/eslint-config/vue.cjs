module.exports = {
    'vue/block-order': [
        'error',
        {
            order: ['script', 'template', 'style'],
        },
    ],
    'vue/script-indent': ['error', 2, { baseIndent: 1 }],
    'vue/html-self-closing': [
        'error',
        {
            html: {
                void: 'never',
                normal: 'always',
                component: 'always',
            },
            svg: 'always',
            math: 'always',
        },
    ],
    'vue/html-indent': [
        'error',
        2,
        {
            attribute: 1,
            baseIndent: 1,
            closeBracket: 0,
            alignAttributesVertically: true,
            ignores: [],
        },
    ],
    'vue/max-attributes-per-line': [
        'error',
        {
            singleline: { max: 3 },
            multiline: { max: 1 },
        },
    ],
    'vue/order-in-components': [
        'error',
        {
            order: [
                'el',
                'name',
                'key',
                'parent',
                'functional',
                ['delimiters', 'comments'],
                ['components', 'directives', 'filters'],
                'extends',
                'mixins',
                ['provide', 'inject'],
                'ROUTER_GUARDS',
                'layout',
                'middleware',
                'validate',
                'scrollToTop',
                'transition',
                'loading',
                'inheritAttrs',
                'model',
                ['props', 'propsData'],
                'emits',
                'setup',
                'asyncData',
                'data',
                'fetch',
                'head',
                'computed',
                'watch',
                'watchQuery',
                'LIFECYCLE_HOOKS',
                'methods',
                ['template', 'render'],
                'renderError',
            ],
        },
    ],
    'vue/no-irregular-whitespace': [
        'error',
        {
            skipStrings: true,
            skipComments: false,
            skipRegExps: false,
            skipTemplates: false,
            skipHTMLAttributeValues: false,
            skipHTMLTextContents: false,
        },
    ],
    'vue/component-definition-name-casing': ['error', 'PascalCase'],
    'vue/match-component-file-name': [
        'error',
        {
            extensions: ['vue'],
            shouldMatchCase: false,
        },
    ],
    'vue/no-dupe-keys': [
        'error',
        {
            groups: [],
        },
    ],
    'vue/component-name-in-template-casing': [
        'error',
        'PascalCase',
        {
            registeredComponentsOnly: true,
        },
    ],
    'vue/define-macros-order': [
        'error',
        {
            order: ['defineOptions', 'defineProps', 'defineEmits', 'defineSlots'],
        },
    ],
    'vue/dot-location': ['error', 'property'],
    'vue/dot-notation': ['error', { allowKeywords: true }],
    'vue/eqeqeq': ['error', 'smart'],
    'vue/no-sparse-arrays': 'error',
    'vue/no-unused-refs': 'error',
    'vue/object-shorthand': [
        'error',
        'always',
        {
            avoidQuotes: true,
            ignoreConstructors: false,
        },
    ],
    'vue/arrow-spacing': ['error', { after: true, before: true }],
    'vue/block-spacing': ['error', 'always'],
    'vue/template-curly-spacing': 'error',
    'vue/padding-line-between-blocks': ['error', 'always'],
    'vue/no-useless-v-bind': 'error',
    'vue/component-options-name-casing': ['error', 'PascalCase'],
    'vue/custom-event-name-casing': ['error', 'camelCase'],
    'vue/multi-word-component-names': 'off',
    'vue/prop-name-casing': ['error', 'camelCase'],
    'vue/max-len': 'off',
    'vue/no-multiple-template-root': 'off',
    'vue/require-default-prop': 'off',
    'vue/no-v-model-argument': 'off',
    'vuejs-accessibility/form-control-has-label': 'off',
    'vue/attributes-order': [
        'error',
        {
            order: [
                'DEFINITION',
                'LIST_RENDERING',
                'CONDITIONALS',
                'RENDER_MODIFIERS',
                'GLOBAL',
                ['UNIQUE', 'SLOT'],
                'TWO_WAY_BINDING',
                'OTHER_DIRECTIVES',
                'OTHER_ATTR',
                'EVENTS',
                'CONTENT',
            ],
            alphabetical: true,
        },
    ],
    'vue/attribute-hyphenation': [
        'error',
        'never',
        {
            ignore: [],
        },
    ],
    'vue/singleline-html-element-content-newline': 'off',
}
